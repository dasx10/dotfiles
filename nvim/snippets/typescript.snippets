snippet i "interface" b
interface $1 {
	$0
}

snippet edi "export default interface" b
interface $1 {
  $0
}

export default $1;

snippet it "import type" b
import type $2 from "$1";

snippet et "import type" b
export type $1 = $2;

snippet ed "export default" b
export default $1;$0

snippet c "const" b
const $1 = $2;$0

snippet al "async () =>" b
async ($1) => $0

snippet f "function" b
function $1($2) {
  $3
}$0

snippet af "async function" b
async function $1($2) {
  $3
}$0

snippet cl "class" b
class $1 {
  constructor ($2) {
    $3
  }
}$0

snippet cle "class extends" b
class $1 extends $2 {
  constructor ($3) {
    super($4);
    $5
  }

  $6
}$0

snippet thenlog "then log" b
.then(
  (${1:data}) => (console.dir({ $1 }, { depth: 10 }), $1),
  ($1Error) => (console.error({ $1Error }), Promise.reject($1Error))
)$0

snippet ls " = " b
($1) => $2

snippet la " = " b
async ($1) => $2

snippet _ "() => " b
($1) => $0

snippet __ "(y) => (x) => ..." b
($1) => ($2) => $0

snippet _nn "(number) => ..." b
(${1:x}: number) => (${2:y}: number) => ${3:$2}

snippet _n "(number) => ..." b
(${1:x}: number) => ${2:$1}

snippet _s "(string) => ..." b
(${1:x}: string) => ${2:$1}
